"""
소인수분해란 어떤 수를 소수들의 곱으로 표현하는 것입니다. 
예를 들어 12를 소인수 분해하면 2 * 2 * 3 으로 나타낼 수 있습니다. 
따라서 12의 소인수는 2와 3입니다. 
자연수 n이 매개변수로 주어질 때 n의 소인수를 오름차순으로 담은 배열을 return하도록 solution 함수를 완성해주세요.
"""

def solution(n):
    """
    주어진 양의 정수 `n`의 소인수를 찾아서 오름차대로 정렬한 목록을 반환합니다.

    매개변수:
    - n (int): 소인수를 찾을 양의 정수입니다.

    반환값:
    - answer (list): `n`의 소인수를 오름차대로 정렬한 목록입니다.

    알고리즘:
    1. `k`를 2로 초기화합니다.
    2. 빈 리스트 `answer`를 생성하여 소인수를 저장합니다.
    3. `n`이 1보다 큰 경우에 반복합니다:
        a. `n`이 `k`로 나누어지는 경우, `k`를 `answer`에 추가하고 `n`을 `k`로 나누어지는 경우까지 반복합니다.
        b. `k`에 1을 더합니다.
    4. `answer` 리스트를 반환합니다.

    예시:
    `n = 12`인 경우, 함수는 [2, 3]을 반환합니다. 이는 2 * 2 * 3 = 12입니다.
    """
    k = 2
    answer = []
    while n > 1:
        if n % k == 0:
            answer.append(k)
            while n % k == 0:
                n //= k
        k += 1

    return answer